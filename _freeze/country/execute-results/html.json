{
  "hash": "27491a371abee8bd4c52cfc9d1d63c3d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Country Analysis\"\nformat: html\n---\n\n\n\n\n# Country Analysis\n\nThis page analyzes life expectancy, GDP per capita, and population trends for a specific country.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:gridExtra':\n\n    combine\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\ngapminder <- read.csv(\"gapminder.csv\")\n\n# Choose a country (example: United States)\ncountry_data <- gapminder %>% filter(country == \"United States\")\n\np1 <- ggplot(country_data, aes(x = year, y = life_expectancy)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Life Expectancy Over Time\", x = \"Year\", y = \"Life Expectancy\") +\n  theme_minimal()\n\np2 <- ggplot(country_data, aes(x = year, y = gdp_per_capita)) +\n  geom_line(color = \"green\") +\n  labs(title = \"GDP per Capita Over Time\", x = \"Year\", y = \"GDP per Capita\") +\n  theme_minimal()\n\np3 <- ggplot(country_data, aes(x = year, y = population_millions)) +\n  geom_line(color = \"red\") +\n  labs(title = \"Population Over Time\", x = \"Year\", y = \"Population (millions)\") +\n  theme_minimal()\n\ngrid.arrange(p1, p2, p3, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](country_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "country_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}